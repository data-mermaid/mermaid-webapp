# This workflow deploys the PRODUCTION version of the app in the S3 Bucket: "app.mermaid.com"
# Note: This workflow requires the bucket to already have been created,
#       along with the right bucket policy to allow actions on s3 objects,
#       as well as public read access

name: Prod Build & Deploy
on:
  push:
    tags:
      - '*'

env:
  S3_BUCKET: app.datamermaid.org
  REACT_APP_AUTH0_AUDIENCE: https://api.datamermaid.org
  REACT_APP_AUTH0_CLIENT_ID: f0WJPG2LHzAX3KLU0LwdmVOvtDo7jiu6
  REACT_APP_AUTH0_DOMAIN: datamermaid.auth0.com
  REACT_APP_MERMAID_API: https://api.datamermaid.org/v1
  REACT_APP_MERMAID_REFERENCE_LINK: https://dev-collect.datamermaid.org/#/reference
  REACT_APP_MERMAID_DASHBOARD_LINK: https://dashboard.datamermaid.org
  REACT_APP_CORAL_ATLAS_APP_ID: v8nkxznp3m

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: Cache Node Modules
        id: yarn_cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-v1-${{ hashFiles('yarn.lock') }}

      - name: Yarn Install
        if: steps.yarn_cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Run Unit Tests
        run: |
          yarn test

      - name: Yarn Build
        run: |
          yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload files to S3 with AWS CLI
        run: |
          aws s3 sync build/ s3://${S3_BUCKET}/ --delete
