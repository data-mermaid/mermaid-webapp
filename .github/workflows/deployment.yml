name: Deployment

on:
  push:
    branches:
      - develop
      # - 165-gh-actions
    tags:
      - 'v[0-9]+.[0-9]+'        # eg: v1.1
      - 'v[0-9]+.[0-9]+.[0-9]+' # eg: v1.1.1

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  deps-cache:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-node@v4.2.0
        with:
          node-version-file: '.nvmrc'

      - uses: actions/cache@v4.2.2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: yarn install --frozen-lockfile

  call-lint:
    if: github.event.pull_request.draft == false
    needs: [deps-cache]
    uses: ./.github/workflows/_lint.yml

  # call-test:
  #   if: github.event.pull_request.draft == false
  #   needs: [deps-cache, call-lint]
  #   uses: ./.github/workflows/_test.yml

  call-cdk-deploy:
    concurrency:
      group: app-deployment-${{ github.ref }}
    needs: [deps-cache, call-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-node@v4.2.0
        with:
          node-version-file: '.nvmrc'

      - name: Fetch yarn cache
        uses: actions/cache@v4.2.2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Install yarn dependencies
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          DEPLOY_AWS_ROLE: ${{ secrets.DEPLOY_AWS_ROLE }}
        with:
          role-to-assume: arn:aws:iam::${{ secrets.CDK_DEFAULT_ACCOUNT }}:role/${{ secrets.CDK_DEPLOY_ROLE }}
          aws-region: us-east-1
          role-skip-session-tagging: true

      - name: Create version file for dev
        if: startsWith(github.ref, 'refs/heads/develop')
        # || startsWith(github.ref, 'refs/heads/165-gh-actions')
        run: |
          short_sha=$(git rev-parse --short ${{ github.sha }})
          echo "export const versionNumber = '$short_sha'" > src/version.js
          cat src/version.js

      - name: Set common variables
        run: |
          echo "REACT_APP_AUTH0_DOMAIN=datamermaid.auth0.com" >> "$GITHUB_ENV"
          echo "REACT_APP_CORAL_ATLAS_APP_ID=v8nkxznp3m" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_API=https://dev-api.datamermaid.org/v1" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_WHATS_NEW_LINK=https://datamermaid.org/reef-stories/mermaid-v2-what-s-new" >> "$GITHUB_ENV"

      - name: Set variables and version for dev
        if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/165-gh-actions')
        run: |
          echo "REACT_APP_AUTH0_CLIENT_ID=4AHcVFcwxHb7p1VFB9sFWG52WL7pdNm5" >> "$GITHUB_ENV"
          echo "REACT_APP_AUTH0_AUDIENCE=https://dev-api.datamermaid.org" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_API=https://dev-api.datamermaid.org/v1" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_DASHBOARD_LINK=https://dev-dashboard.datamermaid.org" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_REFERENCE_LINK=https://dev-public.datamermaid.org/mermaid_attributes.xlsx" >> "$GITHUB_ENV"
          echo "REACT_APP_CAPTURE_GOOGLE_ANALYTICS=false" >> "$GITHUB_ENV"
          echo "TARGET=dev" >> "$GITHUB_ENV"

      - name: Set variables and version for prod
        if: startsWith(github.ref, 'refs/tags')
        run: |
          echo "TARGET=prod" >> "$GITHUB_ENV"
          echo "REACT_APP_AUTH0_AUDIENCE=https://api.datamermaid.org" >> "$GITHUB_ENV"
          echo "REACT_APP_AUTH0_CLIENT_ID=Yahf5mGpQDyYOqbvQlaKE1WqBnUeFPj0" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_API=https://api.datamermaid.org/v1" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_DASHBOARD_LINK=https://dashboard.datamermaid.org" >> "$GITHUB_ENV"
          echo "REACT_APP_MERMAID_REFERENCE_LINK=https://public.datamermaid.org/mermaid_attributes.xlsx" >> "$GITHUB_ENV"
          echo "REACT_APP_CAPTURE_GOOGLE_ANALYTICS=true"
          echo "export const versionNumber = '${{ github.ref_name }}'" > src/version.js
          cat src/version.js

      - name: Yarn Build
        run: yarn build

      - name: Fetch iac node cache
        uses: actions/cache@v4.2.2
        id: iac-cache
        with:
          path: iac/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('iac/package-lock.json') }}

      - name: Install IaC dependancies
        if: ${{ steps.iac-cache.outputs.cache-hit != 'true' }}
        working-directory: iac
        run: npm ci

      - name: CDK Deploy DEV
        if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/165-gh-actions')
        env:
          DEPLOY_AWS_ROLE: ${{ secrets.DEPLOY_AWS_ROLE }}
          SYS_EMAIL: ${{ secrets.SYS_EMAIL }}
          PYTHONPATH: ${{ github.workspace }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: us-east-1
        run: |
          cd iac && cdk deploy \
            --require-approval never \
            preview-webapp \
            dev-webapp
      - name: CDK Deploy PROD
        if: startsWith(github.ref, 'refs/tags')
        env:
          DEPLOY_AWS_ROLE: ${{ secrets.DEPLOY_AWS_ROLE }}
          SYS_EMAIL: ${{ secrets.SYS_EMAIL }}
          PYTHONPATH: ${{ github.workspace }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: us-east-1
        run: |
          cd iac && cdk deploy \
            --require-approval never \
            preview-webapp \
            prod-webapp